@charset "UTF-8";

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1em;
    background-color: lightgray;
    height: 100vh;
    width: 100vw;
}

header {
    background-color: gray;
    color: white;
    padding: 10px;
    display: flex; /* definindo header como um conteiner */
    flex-flow: row wrap; /* as divs filhas serão organizadas em linhas e com quebras de linha */
    justify-content: space-between; /* o space-between colocará o primeiro e ultimo item nos cantos da tela e os demais itens espaçados uniformemente. Como, nesse caso, existem apenas duas divs filhas (titulo h1 e o nav), cada um ficará em um canto (esquerda e direita) da tela */
    align-items: center; /* em relação ao eixo secundário, estarão alinhadas no centro */
}

header > h1 {
    /*border: 1px dotted black; */ /* legal usar bordas nesse exercicio para ver como cada div está se comportando com o display flex */
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.26);
    flex: 0 0 200px /* o titulo não mudará de tamanho com o aumento e diminuição da tela */
}

nav {
    /*border: 1px dotted black;*/
    display: flex; /* aqui é visto o conceito de conteiner dentro de conteiner */
    flex-flow: row wrap; /* as divs de link "a" ficaram dispostas em linhas e com quebra */
    justify-content: flex-end; /* divs colocadas no canto direito da tela */
}

nav > a {
    background-color: black;
    color: white;
    padding: 10px;
    margin: 5px;
    border-radius: 5px;
    text-decoration: none;
    text-align: center;
}

nav > a:hover {
    background-color: white;
    color: black;
    transition: background-color .5s; /* animação css */
}

main {
    background-color: white;
    margin: 10px;
    padding: 10px;
    border-radius: 10px;
    box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.411);
}